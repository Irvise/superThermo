/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     buoyantPimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         4E-2;

deltaT          1E-6;
maxDeltaT       1E-5;

writeControl    timeStep;// adjustableRunTime; 
writeInterval    1; // 5E-4;

purgeWrite      0;

writeFormat     binary;//ascii;

writePrecision  6;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           0.3;


functions
(
	defineGlobalVars
	{
		type addGlobalVariable;
		//outputControl timeStep;
		//outputInterval 1;
		globalScope globalVars;
		globalVariables 
		{
			P_inlet
			{
				valueType scalar;
				value 7.7719E6; // 2.5711435E7;
			}

			P_outlet
			{
				valueType scalar;
				value 7.769E6;  // 2.5708554E7;
			}

			L
			{
				valueType scalar;
				value 0.015;
			}
        }
    }

	LiveInfo
	{
		functionObjectLibs ("libutilityFunctionObjects.so");
		type coded;
		redirectType SummaryData;
		outputControl timeStep;
		outputInterval 1;
		code		
		#{
			const volScalarField& rho = mesh().lookupObject<volScalarField>("rho");
			const scalar rhoAvg = gSum( mesh().V() * rho.internalField() ) / gSum( mesh().V() );
			Info<< "Average density: " << rhoAvg << endl;
		#}; 

		codeInclude
		#{
			#include <fstream>
		#};
	}
	
	WriteRho
	{
		functionObjectLibs   ("libIOFunctionObjects.so");
        type                 writeRegisteredObject;
        objectNames           ( rho );
        outputControl        outputTime; //timeStep
        //outputInterval       1;
	}
	
);


libs ( "libspecie.so"
       "libfluidThermophysicalModels.so"
       "libsuperThermo2.so"
       "libutilityFunctionObjects.so"
       "libOpenFOAM.so"
       "libgroovyBC.so"
       "libsimpleSwakFunctionObjects.so"
       "libswakFunctionObjects.so"   );

// ************************************************************************* //
