/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   uniform 313; // 11.94;

boundaryField
{
    BotWall
    {
		/*type            zeroGradient;
        value           uniform 1;*/
        type            compressible::turbulentHeatFluxTemperature;
        heatSource      flux;        // power [W]; flux [W/m2]
        q               uniform 0;  // heat power or flux 1E+3;
        kappa           fluidThermo; // calculate kappa=alphaEff*thermo.Cp
        kappaName       none;        //ASR - is this ok, will it generate kappa if I specify none?
        Qr              none;        // name of the radiative flux
        value           uniform 0; // initial temperature value
    }
    OtherWalls
    {
		/*type            zeroGradient;
        value           uniform 1;*/
        type            compressible::turbulentHeatFluxTemperature;
        heatSource      flux;        // power [W]; flux [W/m2]
        q               uniform 0;  // heat power or flux 1E+3;
        kappa           fluidThermo; // calculate kappa=alphaEff*thermo.Cp
        kappaName       none;        //ASR - is this ok, will it generate kappa if I specify none?
        Qr              none;        // name of the radiative flux
        value           uniform 0; // initial temperature value
    }
    
    Inlet
    {
        type            fixedValue;
        value           uniform 313; //11.94;
    }
    Outlet
    {
        type            zeroGradient;
        value           uniform 1;
    }
}

// ************************************************************************* //
